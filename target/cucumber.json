[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-06-29T14:12:04.712Z",
        "line": 14,
        "name": "Fetching the quotes with the filter provided as \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"page\";;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1523000000,
              "status": "passed"
            },
            "line": 6,
            "name": "User creates the getQuotes api request payload with filter as \"page\" with value as \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 62
                },
                {
                  "val": "\"1\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3447000000,
              "status": "passed"
            },
            "line": 7,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1076000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 109000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Verify that the response has field \"lastItemIndex\" and value is \"20\"",
            "match": {
              "arguments": [
                {
                  "val": "\"lastItemIndex\"",
                  "offset": 35
                },
                {
                  "val": "\"20\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 812000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:11.947Z",
        "line": 15,
        "name": "Fetching the quotes with the filter provided as \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"page\";;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 6,
            "name": "User creates the getQuotes api request payload with filter as \"page\" with value as \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 62
                },
                {
                  "val": "\"2\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1454000000,
              "status": "passed"
            },
            "line": 7,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 110000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Verify that the response has field \"page\" and value is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"2\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Verify that the response has field \"lastItemIndex\" and value is \"40\"",
            "match": {
              "arguments": [
                {
                  "val": "\"lastItemIndex\"",
                  "offset": 35
                },
                {
                  "val": "\"40\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:13.596Z",
        "line": 16,
        "name": "Fetching the quotes with the filter provided as \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"page\";;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "User creates the getQuotes api request payload with filter as \"page\" with value as \"h\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 62
                },
                {
                  "val": "\"h\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1478000000,
              "status": "passed"
            },
            "line": 7,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 105000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Verify that the response has field \"lastItemIndex\" and value is \"20\"",
            "match": {
              "arguments": [
                {
                  "val": "\"lastItemIndex\"",
                  "offset": 35
                },
                {
                  "val": "\"20\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:15.258Z",
        "line": 17,
        "name": "Fetching the quotes with the filter provided as \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"page\";;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 6,
            "name": "User creates the getQuotes api request payload with filter as \"page\" with value as \"A34\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 62
                },
                {
                  "val": "\"A34\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1466000000,
              "status": "passed"
            },
            "line": 7,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 69000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 95000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Verify that the response has field \"lastItemIndex\" and value is \"20\"",
            "match": {
              "arguments": [
                {
                  "val": "\"lastItemIndex\"",
                  "offset": 35
                },
                {
                  "val": "\"20\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 48000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:16.952Z",
        "line": 18,
        "name": "Fetching the quotes with the filter provided as \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"page\";;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "User creates the getQuotes api request payload with filter as \"page\" with value as \"a$%56\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 62
                },
                {
                  "val": "\"a$%56\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1503000000,
              "status": "passed"
            },
            "line": 7,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 90000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 62000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Verify that the response has field \"lastItemIndex\" and value is \"20\"",
            "match": {
              "arguments": [
                {
                  "val": "\"lastItemIndex\"",
                  "offset": 35
                },
                {
                  "val": "\"20\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:18.643Z",
        "line": 19,
        "name": "Fetching the quotes with the filter provided as \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"page\";;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "User creates the getQuotes api request payload with filter as \"page\" with value as \"0\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 62
                },
                {
                  "val": "\"0\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1586000000,
              "status": "passed"
            },
            "line": 7,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 67000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Verify that the response has field \"lastItemIndex\" and value is \"20\"",
            "match": {
              "arguments": [
                {
                  "val": "\"lastItemIndex\"",
                  "offset": 35
                },
                {
                  "val": "\"20\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:20.353Z",
        "line": 20,
        "name": "Fetching the quotes with the filter provided as \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"page\";;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "User creates the getQuotes api request payload with filter as \"page\" with value as \"-4\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 62
                },
                {
                  "val": "\"-4\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1476000000,
              "status": "passed"
            },
            "line": 7,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 82000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Verify that the response has field \"lastItemIndex\" and value is \"20\"",
            "match": {
              "arguments": [
                {
                  "val": "\"lastItemIndex\"",
                  "offset": 35
                },
                {
                  "val": "\"20\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:22.009Z",
        "line": 21,
        "name": "Fetching the quotes with the filter provided as \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"page\";;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "User creates the getQuotes api request payload with filter as \"page\" with value as \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 62
                },
                {
                  "val": "\"\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1522000000,
              "status": "passed"
            },
            "line": 7,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 84000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Verify that the response has field \"lastItemIndex\" and value is \"20\"",
            "match": {
              "arguments": [
                {
                  "val": "\"lastItemIndex\"",
                  "offset": 35
                },
                {
                  "val": "\"20\"",
                  "offset": 64
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:23.702Z",
        "line": 33,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\";;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Albert Einstein\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Albert Einstein\"",
                  "offset": 85
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1438000000,
              "status": "passed"
            },
            "line": 27,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 102000000,
              "status": "passed"
            },
            "line": 29,
            "name": "Verify that the response has field \"results[0].author\" and value is \"Albert Einstein\"",
            "match": {
              "arguments": [
                {
                  "val": "\"results[0].author\"",
                  "offset": 35
                },
                {
                  "val": "\"Albert Einstein\"",
                  "offset": 68
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "line": 30,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:25.261Z",
        "line": 34,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\";;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"\"",
                  "offset": 85
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1548000000,
              "status": "passed"
            },
            "line": 27,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 28,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "line": 29,
            "name": "Verify that the response has field \"results[0].author\" and value is \"Helmut Schmidt\"",
            "match": {
              "arguments": [
                {
                  "val": "\"results[0].author\"",
                  "offset": 35
                },
                {
                  "val": "\"Helmut Schmidt\"",
                  "offset": 68
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "line": 30,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:26.901Z",
        "line": 45,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" with invalid names",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-with-invalid-names;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 38,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Albert\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Albert\"",
                  "offset": 85
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1444000000,
              "status": "passed"
            },
            "line": 39,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 40,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "line": 41,
            "name": "Verify that the response has field \"count\" and value is \"0\"",
            "match": {
              "arguments": [
                {
                  "val": "\"count\"",
                  "offset": 35
                },
                {
                  "val": "\"0\"",
                  "offset": 56
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 42,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:28.432Z",
        "line": 46,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" with invalid names",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-with-invalid-names;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 38,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"asdg\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"asdg\"",
                  "offset": 85
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1519000000,
              "status": "passed"
            },
            "line": 39,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 40,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 55000000,
              "status": "passed"
            },
            "line": 41,
            "name": "Verify that the response has field \"count\" and value is \"0\"",
            "match": {
              "arguments": [
                {
                  "val": "\"count\"",
                  "offset": 35
                },
                {
                  "val": "\"0\"",
                  "offset": 56
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "line": 42,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:30.031Z",
        "line": 47,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" with invalid names",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-with-invalid-names;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 38,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"AShdg6786\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"AShdg6786\"",
                  "offset": 85
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1628000000,
              "status": "passed"
            },
            "line": 39,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 40,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 83000000,
              "status": "passed"
            },
            "line": 41,
            "name": "Verify that the response has field \"count\" and value is \"0\"",
            "match": {
              "arguments": [
                {
                  "val": "\"count\"",
                  "offset": 35
                },
                {
                  "val": "\"0\"",
                  "offset": 56
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "line": 42,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:31.781Z",
        "line": 48,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" with invalid names",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-with-invalid-names;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "line": 38,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"123 Albert\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"123 Albert\"",
                  "offset": 85
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1536000000,
              "status": "passed"
            },
            "line": 39,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 40,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "line": 41,
            "name": "Verify that the response has field \"count\" and value is \"0\"",
            "match": {
              "arguments": [
                {
                  "val": "\"count\"",
                  "offset": 35
                },
                {
                  "val": "\"0\"",
                  "offset": 56
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "line": 42,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:33.399Z",
        "line": 57,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" with invalid name",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-with-invalid-name;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 52,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"$%^$^%\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"$%^$^%\"",
                  "offset": 85
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1546000000,
              "status": "passed"
            },
            "line": 53,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 54,
            "name": "Verify that the status code is 500",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:34.952Z",
        "line": 69,
        "name": "Fetching the quotes with the filter provided as \"TAGS\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\";;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 61,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes,wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes,wisdom\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1539000000,
              "status": "passed"
            },
            "line": 62,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 63,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 86000000,
              "status": "passed"
            },
            "line": 64,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "line": 65,
            "name": "Verify that the tags field in response has data as \"famous-quotes,wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes,wisdom\"",
                  "offset": 51
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "line": 66,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:36.636Z",
        "line": 70,
        "name": "Fetching the quotes with the filter provided as \"TAGS\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\";;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 61,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1581000000,
              "status": "passed"
            },
            "line": 62,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 63,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 51000000,
              "status": "passed"
            },
            "line": 64,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "line": 65,
            "name": "Verify that the tags field in response has data as \"famous-quotes,inspirational\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes,inspirational\"",
                  "offset": 51
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "line": 66,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:38.303Z",
        "line": 82,
        "name": "Fetching the quotes with the filter provided as \"TAGS\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\";;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 74,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes!wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1450000000,
              "status": "passed"
            },
            "line": 75,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 86000000,
              "status": "passed"
            },
            "line": 77,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 47000000,
              "status": "passed"
            },
            "line": 78,
            "name": "Verify that the tags field in response has data as either tags mentioned in \"famous-quotes!wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 76
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as_either_tags_mentioned_in(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 28000000,
              "status": "passed"
            },
            "line": 79,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:39.928Z",
        "line": 94,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" having invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-having-invalid-values;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 86,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-ques!wism\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-ques!wism\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1502000000,
              "status": "passed"
            },
            "line": 87,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 88,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "line": 89,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "line": 90,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 91,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:41.521Z",
        "line": 95,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" having invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-having-invalid-values;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 86,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"#$%^%!45645\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"#$%^%!45645\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1409000000,
              "status": "passed"
            },
            "line": 87,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 88,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 54000000,
              "status": "passed"
            },
            "line": 89,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "line": 90,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "line": 91,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:43.013Z",
        "line": 96,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" having invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-having-invalid-values;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 86,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"123!wis\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"123!wis\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1507000000,
              "status": "passed"
            },
            "line": 87,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 88,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 59000000,
              "status": "passed"
            },
            "line": 89,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "line": 90,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "line": 91,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:44.620Z",
        "line": 97,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" having invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-having-invalid-values;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 86,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"0000!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"0000!\"",
                  "offset": 83
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1446000000,
              "status": "passed"
            },
            "line": 87,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 88,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 98000000,
              "status": "passed"
            },
            "line": 89,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "line": 90,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "line": 91,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:46.193Z",
        "line": 109,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"AUTHOR\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"author\";;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 101,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes!wisdom\" and \"author\" with value as \"Confucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 83
                },
                {
                  "val": "\"author\"",
                  "offset": 110
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 133
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1533000000,
              "status": "passed"
            },
            "line": 102,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 103,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "line": 104,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "line": 105,
            "name": "Verify that the tags field in response has data as either tags mentioned in \"famous-quotes!wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 76
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as_either_tags_mentioned_in(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "line": 106,
            "name": "Verify that the response has field \"results[0].author\" and value is \"Confucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"results[0].author\"",
                  "offset": 35
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 68
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:47.862Z",
        "line": 110,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"AUTHOR\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"author\";;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 101,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes,wisdom\" and \"author\" with value as \"Confucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes,wisdom\"",
                  "offset": 83
                },
                {
                  "val": "\"author\"",
                  "offset": 110
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 133
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1418000000,
              "status": "passed"
            },
            "line": 102,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 103,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "line": 104,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "line": 105,
            "name": "Verify that the tags field in response has data as either tags mentioned in \"famous-quotes,wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes,wisdom\"",
                  "offset": 76
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as_either_tags_mentioned_in(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 81000000,
              "status": "passed"
            },
            "line": 106,
            "name": "Verify that the response has field \"results[0].author\" and value is \"Confucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"results[0].author\"",
                  "offset": 35
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 68
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:49.471Z",
        "line": 122,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"AUTHOR\" with invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"author\"-with-invalid-values;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 114,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes!wisdom\" and \"author\" with value as \"Confuci\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 83
                },
                {
                  "val": "\"author\"",
                  "offset": 110
                },
                {
                  "val": "\"Confuci\"",
                  "offset": 133
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1477000000,
              "status": "passed"
            },
            "line": 115,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 116,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "line": 117,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "line": 118,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "line": 119,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:51.041Z",
        "line": 123,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"AUTHOR\" with invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"author\"-with-invalid-values;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 114,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quote\" and \"author\" with value as \"Confucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quote\"",
                  "offset": 83
                },
                {
                  "val": "\"author\"",
                  "offset": 102
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 125
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1487000000,
              "status": "passed"
            },
            "line": 115,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 116,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 79000000,
              "status": "passed"
            },
            "line": 117,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "line": 118,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "line": 119,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:52.646Z",
        "line": 124,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"AUTHOR\" with invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"author\"-with-invalid-values;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 114,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"wid\" and \"author\" with value as \"Confu\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"wid\"",
                  "offset": 83
                },
                {
                  "val": "\"author\"",
                  "offset": 93
                },
                {
                  "val": "\"Confu\"",
                  "offset": 116
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1466000000,
              "status": "passed"
            },
            "line": 115,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 116,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 67000000,
              "status": "passed"
            },
            "line": 117,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "line": 118,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "line": 119,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:54.216Z",
        "line": 125,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"AUTHOR\" with invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"author\"-with-invalid-values;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 114,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes,wisdom\" and \"author\" with value as \"Confuc\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes,wisdom\"",
                  "offset": 83
                },
                {
                  "val": "\"author\"",
                  "offset": 110
                },
                {
                  "val": "\"Confuc\"",
                  "offset": 133
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1487000000,
              "status": "passed"
            },
            "line": 115,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 116,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 35000000,
              "status": "passed"
            },
            "line": 117,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "line": 118,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "line": 119,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:55.766Z",
        "line": 126,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"AUTHOR\" with invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"author\"-with-invalid-values;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 114,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quots!wisdo\" and \"author\" with value as \"Confucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quots!wisdo\"",
                  "offset": 83
                },
                {
                  "val": "\"author\"",
                  "offset": 108
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 131
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1474000000,
              "status": "passed"
            },
            "line": 115,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 116,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "line": 117,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "line": 118,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "line": 119,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:57.312Z",
        "line": 127,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"AUTHOR\" with invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"author\"-with-invalid-values;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 114,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes!wisdo\" and \"author\" with value as \"Coucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes!wisdo\"",
                  "offset": 83
                },
                {
                  "val": "\"author\"",
                  "offset": 109
                },
                {
                  "val": "\"Coucius\"",
                  "offset": 132
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1462000000,
              "status": "passed"
            },
            "line": 115,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 116,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "line": 117,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "line": 118,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "line": 119,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@author"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:12:58.872Z",
        "line": 139,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"PAGE\" with invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"page\"-with-invalid-values;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 131,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quote\" and \"page\" with value as \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quote\"",
                  "offset": 83
                },
                {
                  "val": "\"page\"",
                  "offset": 102
                },
                {
                  "val": "\"2\"",
                  "offset": 123
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1453000000,
              "status": "passed"
            },
            "line": 132,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 133,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 59000000,
              "status": "passed"
            },
            "line": 134,
            "name": "Verify that the response has field \"page\" and value is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"2\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "line": 135,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "line": 136,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:00.418Z",
        "line": 140,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"PAGE\" with invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"page\"-with-invalid-values;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 131,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"wid\" and \"page\" with value as \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"wid\"",
                  "offset": 83
                },
                {
                  "val": "\"page\"",
                  "offset": 93
                },
                {
                  "val": "\"1\"",
                  "offset": 114
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1442000000,
              "status": "passed"
            },
            "line": 132,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 133,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 41000000,
              "status": "passed"
            },
            "line": 134,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "line": 135,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "line": 136,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:01.930Z",
        "line": 141,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"PAGE\" with invalid values",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"page\"-with-invalid-values;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 131,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quots!wisdo\" and \"page\" with value as \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quots!wisdo\"",
                  "offset": 83
                },
                {
                  "val": "\"page\"",
                  "offset": 108
                },
                {
                  "val": "\"1\"",
                  "offset": 129
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1567000000,
              "status": "passed"
            },
            "line": 132,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 133,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "line": 134,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "line": 135,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 136,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:03.582Z",
        "line": 153,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"page\";;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 145,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes!wisdom\" and \"page\" with value as \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 83
                },
                {
                  "val": "\"page\"",
                  "offset": 110
                },
                {
                  "val": "\"2\"",
                  "offset": 131
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1495000000,
              "status": "passed"
            },
            "line": 146,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 147,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "line": 148,
            "name": "Verify that the response has field \"page\" and value is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"2\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "line": 149,
            "name": "Verify that the tags field in response has data as either tags mentioned in \"famous-quotes!wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 76
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as_either_tags_mentioned_in(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "line": 150,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:05.172Z",
        "line": 154,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"page\";;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 145,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes,wisdom\" and \"page\" with value as \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes,wisdom\"",
                  "offset": 83
                },
                {
                  "val": "\"page\"",
                  "offset": 110
                },
                {
                  "val": "\"1\"",
                  "offset": 131
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1441000000,
              "status": "passed"
            },
            "line": 146,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 147,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 47000000,
              "status": "passed"
            },
            "line": 148,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "line": 149,
            "name": "Verify that the tags field in response has data as either tags mentioned in \"famous-quotes,wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes,wisdom\"",
                  "offset": 76
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as_either_tags_mentioned_in(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "line": 150,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:06.710Z",
        "line": 155,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"page\";;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 145,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes!wisdom\" and \"page\" with value as \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 83
                },
                {
                  "val": "\"page\"",
                  "offset": 110
                },
                {
                  "val": "\"1\"",
                  "offset": 131
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1452000000,
              "status": "passed"
            },
            "line": 146,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 147,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 67000000,
              "status": "passed"
            },
            "line": 148,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "line": 149,
            "name": "Verify that the tags field in response has data as either tags mentioned in \"famous-quotes!wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 76
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as_either_tags_mentioned_in(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "line": 150,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:08.282Z",
        "line": 156,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"page\";;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 145,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes,wisdom\" and \"page\" with value as \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes,wisdom\"",
                  "offset": 83
                },
                {
                  "val": "\"page\"",
                  "offset": 110
                },
                {
                  "val": "\"2\"",
                  "offset": 131
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1496000000,
              "status": "passed"
            },
            "line": 146,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 147,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "line": 148,
            "name": "Verify that the response has field \"page\" and value is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"2\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "line": 149,
            "name": "Verify that the tags field in response has data as either tags mentioned in \"famous-quotes,wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes,wisdom\"",
                  "offset": 76
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as_either_tags_mentioned_in(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "line": 150,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:09.865Z",
        "line": 157,
        "name": "Fetching the quotes with the filter provided as \"TAGS\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"tags\"-and-\"page\";;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 145,
            "name": "User creates the getQuotes api request payload with filter as \"tags\" with value as \"famous-quotes!wisdo\" and \"page\" with value as \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"tags\"",
                  "offset": 62
                },
                {
                  "val": "\"famous-quotes!wisdo\"",
                  "offset": 83
                },
                {
                  "val": "\"page\"",
                  "offset": 109
                },
                {
                  "val": "\"2\"",
                  "offset": 130
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1488000000,
              "status": "passed"
            },
            "line": 146,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 147,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 54000000,
              "status": "passed"
            },
            "line": 148,
            "name": "Verify that the response has field \"page\" and value is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"2\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "line": 149,
            "name": "Verify that the tags field in response has data as either tags mentioned in \"famous-quotes!wisdo\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes!wisdo\"",
                  "offset": 76
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as_either_tags_mentioned_in(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "line": 150,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@tags"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:11.440Z",
        "line": 169,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-and-\"page\";;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 161,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Confucius\" and \"page\" with value as \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 101
                },
                {
                  "val": "\"2\"",
                  "offset": 122
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1517000000,
              "status": "passed"
            },
            "line": 162,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 163,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 89000000,
              "status": "passed"
            },
            "line": 164,
            "name": "Verify that the response has field \"page\" and value is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"2\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 41000000,
              "status": "passed"
            },
            "line": 165,
            "name": "Verify that the response has field \"results[0].author\" and value is \"Confucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"results[0].author\"",
                  "offset": 35
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 68
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "line": 166,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:13.100Z",
        "line": 170,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-and-\"page\";;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 161,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Confucius\" and \"page\" with value as \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 101
                },
                {
                  "val": "\"1\"",
                  "offset": 122
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1426000000,
              "status": "passed"
            },
            "line": 162,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 163,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "line": 164,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "line": 165,
            "name": "Verify that the response has field \"results[0].author\" and value is \"Confucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"results[0].author\"",
                  "offset": 35
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 68
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "line": 166,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:14.611Z",
        "line": 171,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-and-\"page\";;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 161,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Confucius\" and \"page\" with value as \"as\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 101
                },
                {
                  "val": "\"as\"",
                  "offset": 122
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1478000000,
              "status": "passed"
            },
            "line": 162,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 163,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 79000000,
              "status": "passed"
            },
            "line": 164,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "line": 165,
            "name": "Verify that the response has field \"results[0].author\" and value is \"Confucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"results[0].author\"",
                  "offset": 35
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 68
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 166,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:16.251Z",
        "line": 172,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-and-\"page\";;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 161,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Confucius\" and \"page\" with value as \"#$\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 101
                },
                {
                  "val": "\"#$\"",
                  "offset": 122
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1442000000,
              "status": "passed"
            },
            "line": 162,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 163,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 35000000,
              "status": "passed"
            },
            "line": 164,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 28000000,
              "status": "passed"
            },
            "line": 165,
            "name": "Verify that the response has field \"results[0].author\" and value is \"Confucius\"",
            "match": {
              "arguments": [
                {
                  "val": "\"results[0].author\"",
                  "offset": 35
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 68
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 166,
            "name": "Verify the json schema for the response as \"getQuotesSuccess\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesSuccess\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:17.771Z",
        "line": 185,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-and-\"page\";;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 177,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Confuciu\" and \"page\" with value as \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Confuciu\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 100
                },
                {
                  "val": "\"1\"",
                  "offset": 121
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1462000000,
              "status": "passed"
            },
            "line": 178,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 179,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "line": 180,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31000000,
              "status": "passed"
            },
            "line": 181,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "line": 182,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:19.356Z",
        "line": 186,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-and-\"page\";;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 177,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"1234hgfgh\" and \"page\" with value as \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"1234hgfgh\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 101
                },
                {
                  "val": "\"1\"",
                  "offset": 122
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1445000000,
              "status": "passed"
            },
            "line": 178,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 179,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "line": 180,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "line": 181,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "line": 182,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:20.887Z",
        "line": 187,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-and-\"page\";;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 177,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Co#$5\" and \"page\" with value as \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Co#$5\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 97
                },
                {
                  "val": "\"2\"",
                  "offset": 118
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1405000000,
              "status": "passed"
            },
            "line": 178,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 179,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "line": 180,
            "name": "Verify that the response has field \"page\" and value is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"2\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "line": 181,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 182,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:22.329Z",
        "line": 188,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\" and \"PAGE\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"-and-\"page\";;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 177,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Confucius\" and \"page\" with value as \"1500\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Confucius\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 101
                },
                {
                  "val": "\"1500\"",
                  "offset": 122
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1598000000,
              "status": "passed"
            },
            "line": 178,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 179,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "line": 180,
            "name": "Verify that the response has field \"page\" and value is \"1500\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1500\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "line": 181,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "line": 182,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:23.988Z",
        "line": 200,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\", \"PAGE\" and \"TAGS\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"--\"page\"-and-\"tags\";;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 192,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Helmut Schmidt\",\"page\" with value as \"1\" and \"tags\" with value as \"famous-quotes!wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Helmut Schmidt\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 102
                },
                {
                  "val": "\"1\"",
                  "offset": 123
                },
                {
                  "val": "\"tags\"",
                  "offset": 131
                },
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 152
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1410000000,
              "status": "passed"
            },
            "line": 193,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 194,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 48000000,
              "status": "passed"
            },
            "line": 195,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 35000000,
              "status": "passed"
            },
            "line": 196,
            "name": "Verify that the response has field \"results[0].author\" and value is \"Helmut Schmidt\"",
            "match": {
              "arguments": [
                {
                  "val": "\"results[0].author\"",
                  "offset": 35
                },
                {
                  "val": "\"Helmut Schmidt\"",
                  "offset": 68
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "line": 197,
            "name": "Verify that the tags field in response has data as either tags mentioned in \"famous-quotes!wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes!wisdom\"",
                  "offset": 76
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as_either_tags_mentioned_in(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:25.506Z",
        "line": 201,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\", \"PAGE\" and \"TAGS\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"--\"page\"-and-\"tags\";;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 192,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Helmut Schmidt\",\"page\" with value as \"as\" and \"tags\" with value as \"famous-quotes\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Helmut Schmidt\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 102
                },
                {
                  "val": "\"as\"",
                  "offset": 123
                },
                {
                  "val": "\"tags\"",
                  "offset": 132
                },
                {
                  "val": "\"famous-quotes\"",
                  "offset": 153
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1445000000,
              "status": "passed"
            },
            "line": 193,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 194,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "line": 195,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37000000,
              "status": "passed"
            },
            "line": 196,
            "name": "Verify that the response has field \"results[0].author\" and value is \"Helmut Schmidt\"",
            "match": {
              "arguments": [
                {
                  "val": "\"results[0].author\"",
                  "offset": 35
                },
                {
                  "val": "\"Helmut Schmidt\"",
                  "offset": 68
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "line": 197,
            "name": "Verify that the tags field in response has data as either tags mentioned in \"famous-quotes\"",
            "match": {
              "arguments": [
                {
                  "val": "\"famous-quotes\"",
                  "offset": 76
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_tags_field_in_response_has_data_as_either_tags_mentioned_in(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:27.063Z",
        "line": 213,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\", \"PAGE\" and \"TAGS\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"--\"page\"-and-\"tags\";;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 205,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Helmut Schmidt\",\"page\" with value as \"1\" and \"tags\" with value as \"famous-quotes,wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Helmut Schmidt\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 102
                },
                {
                  "val": "\"1\"",
                  "offset": 123
                },
                {
                  "val": "\"tags\"",
                  "offset": 131
                },
                {
                  "val": "\"famous-quotes,wisdom\"",
                  "offset": 152
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1409000000,
              "status": "passed"
            },
            "line": 206,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 207,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 75000000,
              "status": "passed"
            },
            "line": 208,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "line": 209,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "line": 210,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:28.583Z",
        "line": 214,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\", \"PAGE\" and \"TAGS\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"--\"page\"-and-\"tags\";;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 205,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Helmut Schmidt\",\"page\" with value as \"#$\" and \"tags\" with value as \"wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Helmut Schmidt\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 102
                },
                {
                  "val": "\"#$\"",
                  "offset": 123
                },
                {
                  "val": "\"tags\"",
                  "offset": 132
                },
                {
                  "val": "\"wisdom\"",
                  "offset": 153
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1402000000,
              "status": "passed"
            },
            "line": 206,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 207,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "line": 208,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "line": 209,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "line": 210,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:30.064Z",
        "line": 215,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\", \"PAGE\" and \"TAGS\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"--\"page\"-and-\"tags\";;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 205,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Helmut Schmi\",\"page\" with value as \"#$\" and \"tags\" with value as \"wisd\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Helmut Schmi\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 100
                },
                {
                  "val": "\"#$\"",
                  "offset": 121
                },
                {
                  "val": "\"tags\"",
                  "offset": 130
                },
                {
                  "val": "\"wisd\"",
                  "offset": 151
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1466000000,
              "status": "passed"
            },
            "line": 206,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 207,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "line": 208,
            "name": "Verify that the response has field \"page\" and value is \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"1\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "line": 209,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "line": 210,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          },
          {
            "name": "@tags"
          }
        ]
      },
      {
        "start_timestamp": "2021-06-29T14:13:31.605Z",
        "line": 216,
        "name": "Fetching the quotes with the filter provided as \"AUTHOR\", \"PAGE\" and \"TAGS\"",
        "description": "",
        "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters;fetching-the-quotes-with-the-filter-provided-as-\"author\"--\"page\"-and-\"tags\";;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 205,
            "name": "User creates the getQuotes api request payload with filter as \"author\" with value as \"Helmut\",\"page\" with value as \"2\" and \"tags\" with value as \"wisdom\"",
            "match": {
              "arguments": [
                {
                  "val": "\"author\"",
                  "offset": 62
                },
                {
                  "val": "\"Helmut\"",
                  "offset": 85
                },
                {
                  "val": "\"page\"",
                  "offset": 94
                },
                {
                  "val": "\"2\"",
                  "offset": 115
                },
                {
                  "val": "\"tags\"",
                  "offset": 123
                },
                {
                  "val": "\"wisdom\"",
                  "offset": 144
                }
              ],
              "location": "stepDefinitions.GetQuotes.user_creates_the_get_quotes_api_request_payload_with_filter_as_with_value_as_with_value_as_and_with_value_as(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1497000000,
              "status": "passed"
            },
            "line": 206,
            "name": "User sends the request",
            "match": {
              "location": "stepDefinitions.GetQuotes.user_sends_the_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 207,
            "name": "Verify that the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 31
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_status_code_is(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "line": 208,
            "name": "Verify that the response has field \"page\" and value is \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "\"page\"",
                  "offset": 35
                },
                {
                  "val": "\"2\"",
                  "offset": 55
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_and_value_is(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "line": 209,
            "name": "Verify that the response has field \"results\" as empty list",
            "match": {
              "arguments": [
                {
                  "val": "\"results\"",
                  "offset": 35
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_that_the_response_has_field_as_empty_list(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "line": 210,
            "name": "Verify the json schema for the response as \"getQuotesNoResults\"",
            "match": {
              "arguments": [
                {
                  "val": "\"getQuotesNoResults\"",
                  "offset": 43
                }
              ],
              "location": "stepDefinitions.GetQuotes.verify_the_json_schema_for_the_response_as(java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@quotes"
          },
          {
            "name": "@author"
          },
          {
            "name": "@page"
          },
          {
            "name": "@tags"
          }
        ]
      }
    ],
    "name": "This feature file contains the test cases related to fetching quotes with filters",
    "description": "",
    "id": "this-feature-file-contains-the-test-cases-related-to-fetching-quotes-with-filters",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/getQuotes.feature",
    "tags": [
      {
        "name": "@quotes",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]